%% generalised errorbars plotting function for 4ch decoding timeseries for state frequencies. 
% inputs:
% acc_source_4ch_states_100/200/400/600ms_epochs_df/ms(_g3)(_2/5/10ds).mat
% outputs: source_4ch_states_....figs
% author: Morgan Williamson
% last edited: 20/04/2020

%% Plot loop

glabel = {'','_g3'};                    % trial grouping condition
xlabel = {'_df','_ms'};                 % binarisation choice differentiation/median split
dslabel = {'','_2ds','_5ds','_10ds'};   % downsampling factors x1 (2ms sample intervals) / x2 / x5 / x10

epochs = [100,200,400,600];
for ds = 1:4
    for x = 1:2
        for g = 1:2
            for q = 1:4
                epoch = epochs(q);
                load(['acc_source_4ch_states' num2str(epoch) 'ms_epochs' dslabel{ds} glabel{g} '_p3' xlabel{x}]);
                Ydata = mean(Acc_states_source(:,:),[2]);
                prc = prctile(Acc_states_source, [2.5 97.5], 2);


                Xdata = [];
                if size(Ydata,1) == 23
                    Xdata = (-50:40:830).';
                    
                elseif size(Ydata,1) == 21
                    Xdata = (0:40:800).';
                    
                elseif size(Ydata,1) == 16
                    Xdata = (100:40:700).';
                    
                elseif size(Ydata,1) == 11
                    Xdata = (200:40:600).'; 
                    
                end

                X1 = Xdata;
                Y1 = Ydata;
                YNeg1 = (Ydata - prc(:,1));
                YPos1 = (prc(:,2)- Ydata);
                createfigure(X1,Y1,YNeg1,YPos1,epoch,dslabel{ds}, glabel{g},xlabel{x});
                close all
            end
        end
    end
end 

function createfigure(X1, Y1, YNeg1, YPos1,epoch,ds,g,x)
%CREATEFIGURE(X1, Y1, YNeg1, YPos1)
%  X1:  errorbar x vector data
%  Y1:  errorbar y vector data
%  YNEG1:  errorbar ynegativedelta vector data
%  YPOS1:  errorbar ypositivedelta vector data

%  Auto-generated by MATLAB on 28-Jan-2020 13:28:08

% Create figure
figure1 = figure;
savetitle1 = ['source_4ch_states' num2str(epoch) 'ms' ds g '_p3' x];
% Create axes
axes1 = axes('Parent',figure1);
hold(axes1,'on');

% Create errorbar
errorbar(X1,Y1,YNeg1,YPos1,'DisplayName','source IIS');

% Create ylabel
ylabel('Decoding accuracy (%)');

% Create xlabel
xlabel('Time in epoch (ms)');

% Create title
title(['Decoding of 31/32 by 4ch source states (' num2str(epoch) 'ms) '...
    strrep(ds,'_','') ' ' strrep(g,'_','') ' ' strrep(x,'_','')]);

% Uncomment the following line to preserve the X-limits of the axes
xlim(axes1,[(min(X1)-50) (max(X1) + 50)]);
box(axes1,'on');
% Set the remaining axes properties
set(axes1,'YGrid','on');
% Create legend
legend1 = legend(axes1,'show');
set(legend1,...
    'Position',[0.758630953525149 0.146031747131593 0.129464284570089 0.0464285703287238]);

savefig(strcat(savetitle1,'.fig'));
saveas(figure1, strcat(savetitle1,'.jpg'));
end 